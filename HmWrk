#Task 1

#During the lesson, we have created a server and client, 
#which use TCP/IP protocol for communication via sockets.
#In this task, you have to create a server and client, which will use user datagram protocol (UDP) for communication.

#UDP не є надійним протоколом зв'язку, на відміну від TCP.Під час передачі,пакети даних можуть бути втрачені або передані в невпорядкованому вигляді.

UPDServer.py 

import socket


server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) #створили сокет


server_address = ('localhost', 12345) #надали адресу і порт 
server_socket.bind(server_address) #прив'язали сокет до адреси і порту

print('now our UDP server is up & running')

while True:
    #отримаємо повідомлення від клієнта 
    data, client_address = server_socket.recvfrom(1024)
    print('Received message:', data.decode())

    #відповідь від сервера на запит клієнта
    response = 'Server sends kind regards!thank you for cooperation'
    server_socket.sendto(response.encode(), client_address)

UDPClient.py
import socket


client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) #створили сокет клієнта


server_address = ('localhost', 12345) #адреса і порт сервера 


message = 'Client says hi!' #повідомлення від клієнта
client_socket.sendto(message.encode(), server_address)


response, server_address = client_socket.recvfrom(1024) #отримуємо і виводимо на принт повідомлення від клієнта
print('Received response:', response.decode())


client_socket.close() #закриваємо сокет


 

#Task 2

#Extend the echo server, which returns to client the data, encrypted using the Caesar cipher algorithm by a specific key obtained from the client.
import socket

Task2UDPServer.py
def caesar_cipher(text, key):
    result = ""
    for char in text:
        if char.isalpha():
            ascii_offset = ord('A') if char.isupper() else ord('a')
            shifted = (ord(char) - ascii_offset + key) % 26 + ascii_offset)
            result += chr(shifted)
        else:
            result += char
    return result

# Create a UDP socket
server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

# Bind the socket to a specific address and port
server_address = ('localhost', 65435)
server_socket.bind(server_address)

print('UDP server is running...')

while True:
    # Receive message from the client
    data, client_address = server_socket.recvfrom(1024)
    received_message = data.decode()
    print('Received message:', received_message)

    # Split the message into key and text
    key, text = received_message.split(',')
    key = int(key)

    # Encrypt the text using the Caesar cipher algorithm
    encrypted_text = caesar_cipher(text, key)
    print('Encrypted text:', encrypted_text)

    # Send the encrypted response back to the client
    server_socket.sendto(encrypted_text.encode(), client_address)

 Task2UPDClient.py 
 
 import socket

# Create a UDP socket
client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

# Server address and port
server_address = ('localhost', 65435)

# Get the key and text from the user
key = int(input('Enter the key: '))
text = input('Enter the text: ')

# Send the key and text to the server
message = f"{key},{text}"
client_socket.sendto(message.encode(), server_address)

# Receive and print the encrypted response from the server
encrypted_response, server_address = client_socket.recvfrom(1024)
print('Received encrypted response:', encrypted_response.decode())

# Close the socket
client_socket.close()

 
